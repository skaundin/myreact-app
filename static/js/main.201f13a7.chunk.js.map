{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Burger/BuildControls/BuildControls.css","components/Layout/Layout.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Backdrop/Backdrop.css","components/UI/Button/Button.css","App.css","hoc/Aux.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BuildControl","Label","Less","More","BuildControls","OrderButton","enable","Content","Burger","Modal","Backdrop","Button","Success","Danger","App","aux","props","children","layout","react_default","a","createElement","Aux","className","classes","BurgerIngredient","ingredient","this","type","Component","burger","transformedIngredients","Object","keys","ingredients","map","igKey","toConsumableArray","Array","_","i","BurgerIngredients_BurgerIngredients","key","reduce","arr","el","concat","length","label","onClick","removed","disabled","added","controls","price","toFixed","ctrl","BuildControls_BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","backdrop","show","clicked","modal","Backdrop_Backdrop","modalClosed","style","transform","opacity","button","btnType","join","orderSummary","ingredientSummary","textTrasform","Button_Button","purchaseCancel","purchaseContinue","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","purchased","addIngredientHandler","updateCount","_this","updateIngredients","objectSpread","priceAddition","newPrice","setState","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","alert","sum","disabledInfo","Modal_Modal","OrderSummary","Burger_Burger","Burger_BuildControls_BuildControls","Layout_Layout","containers_BurgerBuilder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.201f13a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients__BreadBottom__16czh\",\"BreadTop\":\"BurgerIngredients__BreadTop__1F9cD\",\"Seeds1\":\"BurgerIngredients__Seeds1__1KqDN\",\"Seeds2\":\"BurgerIngredients__Seeds2__1j0Rg\",\"Meat\":\"BurgerIngredients__Meat__1kFCF\",\"Cheese\":\"BurgerIngredients__Cheese__3JVcn\",\"Salad\":\"BurgerIngredients__Salad__142r8\",\"Bacon\":\"BurgerIngredients__Bacon__3LSem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__efy1y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\"};","\n\nconst aux = (props) => props.children;\n\nexport default aux ","import React from 'react';\nimport Aux from '../../hoc/Aux';\nimport classes from './Layout.css';\n\nconst layout = (props) => (\n    <Aux> \n        <main className={classes.Content}>\n            {props.children}\n        </main>\n    </Aux>\n)\n\n\nexport default layout;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredients.css';\n\n\nclass  BurgerIngredient extends Component {\n    render(){\n        let ingredient = null;\n    switch(this.props.type){\n        case('bread-bottom'):\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n        case('bread-top'):\n        ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n            )\n        break;\n        case('meat'):\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n        case('salad'):\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n        case('cheese'):\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n        case('bacon'):\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n        default:\n            ingredient = null;\n    }\n\n        return ingredient;\n  \n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","/*\n\n\nimport React from 'react'\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\nimport classes from './Burger.css'\n\nconst burger = (props) => {\n    let  transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])]\n        .map((_, i ) => {\n            return <BurgerIngredient key={igKey + i} type={igKey} />;\n        }\n        );\n\n   })\n\n\n   .reduce((arr,el) => {\n        return arr.concat(el)\n    },[]);\n\n    if(transformedIngredients.length === 0){\n        transformedIngredients = <p>Please start adding ingredients ! </p>;\n    }\n    console.log(transformedIngredients);\n\n    return(\n    <div className={classes.Burger}>\n        <BurgerIngredient type=\"bread-top\"/>\n        {transformedIngredients}\n        <BurgerIngredient type=\"bread-bottom\"/>\n    </div>\n    )\n}\n\nexport default burger;\n\n\n*/\n\n\n\n\n\nimport React from 'react';\n\nimport classes from './Burger.css';\nimport BurgerIngredient from './BurgerIngredients/BurgerIngredients';\n\nconst burger = ( props ) => {\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.css';\nconst BuildControl = (props) => (\n    // eslint-disable-next-line no-unused-expressions\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less}\n        onClick={props.removed}disabled={props.disabled}>Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n\n    </div>\n)\n\nexport default BuildControl;\n","import React from 'react'\nimport classes from './BuildControls.css'\nimport BuildControl from './BuildControl/BuildControl'\nconst controls = [\n    {label:'Salad', type: 'salad'},\n    {label:'Bacon', type: 'bacon'},\n    {label:'Cheese', type: 'cheese'},\n    {label:'Meat', type: 'meat'},\n];\nconst BuildControls = (props) =>(\n    <div className={classes.BuildControls}>\n    <p> Current Price: <strong>{props.price.toFixed(2)}</strong> </p>\n       {controls.map(ctrl => (\n           <BuildControl \n           key={ctrl.label} \n           label={ctrl.label}\n           added = {() => props.ingredientAdded(ctrl.type)}\n           removed = {() => props.ingredientRemoved(ctrl.type)}\n           disabled= {props.disabled[ctrl.type]}\n           \n           />\n       ))} \n       <button \n       className={classes.OrderButton}disabled={!props.purchasable} \n       onClick={props.ordered}>\n       ORDER NOW </button>\n    </div>\n);\n\nexport default BuildControls;\n\n","import React from 'react';\nimport classes from './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? \n    <div className={classes.Backdrop} onClick={props.clicked}></div>: null\n);\n\nexport default backdrop;","import React from 'react';\nimport classes from './Modal.css';\nimport Aux from '../../../hoc/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\n\nconst modal = (props) => \n(\n    // eslint-disable-next-line no-unused-expressions\n   <Aux>\n       <Backdrop show={props.show}\n       clicked = {props.modalClosed} />\n       <div className={classes.Modal} style={\n        \n        {\n        transform: props.show ? \n        'translateY(0)': 'translateY(-100vh)',\n    opacity: props.show ?'1': '0'\n}}>\n        {props.children}\n    </div>\n   </Aux>\n    \n\n);\n\nexport default modal;\n\n\n","import React from 'react';\nimport classes from './Button.css';\n\nconst  button = (props) => (\n    <button className={[classes.Button[props.btnType]].join(' ')} onClick={props.clicked}>{props.children}</button>\n\n);\n\n\n\nexport default button;\n","import React from 'react';\nimport Aux from '../../../hoc/Aux';\nimport Button from '../../UI/Button/Button';\n\n\nconst orderSummary = (props) => {\n    const ingredientSummary = Object.keys(props.ingredients)\n    .map(igKey => { \n        return (<li key={igKey}>\n            <span style={{textTrasform: 'capitalize'}}>{igKey}</span>:\n    {props.ingredients[igKey]}</li>);\n    \n    });   \n\n    return(\n        <Aux>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price: {props.price.toFixed(2)}</strong></p>\n            <p>Continue to checkout? </p>\n            <Button btnType=\"Danger\" clicked={props.purchaseCancel}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={props.purchaseContinue}>CONTUNE</Button>      \n        </Aux>\n    )\n};\n\n\nexport default orderSummary;","/*\nimport React, {Component} from 'react'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Aux from '../../hoc/Aux.js'\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7 \n}\nclass Burgerbuilder extends Component {\n    state = {\n        ingredients:{\n            cheese: 0,\n            salad: 0,\n            bacon:0,\n            meat: 0\n        }\n    }\n\n    addIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        const updateCount = oldCount + 1;\n        const updateIngredients = {\n            ...this.state.ingredients\n        };\n        updateIngredients[type] = updateCount;\n        const priceAddition  = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updateIngredients})\n\n\n    }\n    removeIngredientHandler = (type) =>{\n\n    }\n\n    render(){\n        return(\n            <Aux>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                ingredientAdded = {this.addIngredientHandler} />\n            </Aux>\n        );\n    }\n}\n\nexport default Burgerbuilder;\n\n*/\nimport React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7 \n}\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable:false,\n        purchased:false\n    }\n\n    updatePurchaseState(ingredients){\n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey];\n        })\n        .reduce((sum, el) => \n        {\n            return sum + el;\n        }, 0);\n\n        this.setState({purchasable: sum > 0});\n    }\n    addIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        const updateCount = oldCount + 1;\n        const updateIngredients = {\n            ...this.state.ingredients\n        };\n        updateIngredients[type] = updateCount;\n        const priceAddition  = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState({totalPrice: newPrice, ingredients: updateIngredients})\n        this.updatePurchaseState(updateIngredients);\n\n    }\n    removeIngredientHandler = (type) =>{\n        const oldCount = this.state.ingredients[type];\n        if(oldCount <= 0){\n            return;\n        }\n        const updateCount = oldCount - 1;\n        const updateIngredients = {\n            ...this.state.ingredients\n        };\n        updateIngredients[type] = updateCount;\n        const priceDeduction  = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState({totalPrice: newPrice, ingredients: updateIngredients})\n        this.updatePurchaseState(updateIngredients);\n\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchased:true})\n    }\n\n    purchaseCancelHandler = () =>{\n        this.setState({purchased:false})\n    }\n\n    purchaseContinueHandler = () =>{\n        alert(\"You continue\");\n    }\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        return (\n            <Aux>\n                <Modal show={this.state.purchased}\n                    modalClosed={this.purchaseCancelHandler}\n                >\n                    <OrderSummary ingredients={this.state.ingredients}\n                    price = {this.state.totalPrice}\n                    purchaseContinue = {this.purchaseContinueHandler}\n                    purchaseCancel = {this.purchaseCancelHandler}\n                   \n                    />\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                ingredientAdded = {this.addIngredientHandler} \n                ingredientRemoved = {this.removeIngredientHandler}\n                disabled={disabledInfo}\n                purchasable={this.state.purchasable}\n                ordered={this.purchaseHandler}\n                price={this.state.totalPrice}\n                 />\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;","import React, { Component } from 'react';\nimport './App.css';\nimport Layout from  './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n         <Layout>\n           <BurgerBuilder/>\n         </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}